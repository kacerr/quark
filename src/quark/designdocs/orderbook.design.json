{"_id": "_design/orderbook", "couchapp": {"signatures": {}, "objects": {}, "manifest": ["views/", "views/ask/", "views/ask/map.cpp", "views/ask/reduce.cpp", "views/bid/", "views/bid/map.cpp", "views/bid/reduce.cpp", "language"]}, "_attachments": {}, "language": "C++", "views": {"ask": {"map": "/*\n * map.cpp\n *\n *  Created on: Jun 4, 2017\n *      Author: ondra\n */\n\n#include <couchcpp/api.h>\n\nvoid mapdoc(Document doc) {\n\n\tif (doc.getID().substr(0,2) == \"o.\"\n\t\t\t&& doc[\"finished\"].getBool() == false\n\t\t\t&& doc[\"dir\"] == \"sell\"\n\t\t\t&& doc[\"status\"].getString() == \"active\"\n\t\t\t&& (doc[\"type\"].getString() == \"limit\"\n\t\t\t\t|| doc[\"type\"].getString() == \"postlimit\")) {\n\n\t\temit(doc[\"limitPrice\"], doc[\"size\"]);\n\t}\n}", "reduce": "/*\n * reduce.cpp\n *\n *  Created on: Jun 9, 2017\n *      Author: ondra\n */\n\n#include <couchcpp/api.h>\n\nValue reduce(RowSet rows) {\n\tjson::maxPrecisionDigits = 9;\n\n\tdouble amount = 0;\n\tunsigned int count = rows.size();;\n\tfor (auto &&x : rows) {\n\t\tamount = amount + x.value.getNumber();\n\t}\n\n\treturn Object(\"size\", amount)(\"offers\", count);\n}\n\nValue rereduce(Value rows) {\n\tdouble amount = 0;\n\tunsigned int count = 0;\n\tfor (auto x : rows) {\n\t\tamount = amount + x[\"size\"].getNumber();\n\t\tcount = count + x[\"offers\"].getUInt();\n\t}\n\treturn Object(\"size\", amount)(\"offers\", count);\n\n}"}, "bid": {"map": "/*\n * map.cpp\n *\n *  Created on: Jun 4, 2017\n *      Author: ondra\n */\n\n#include <couchcpp/api.h>\n\nvoid mapdoc(Document doc) {\n\n\tif (doc.getID().substr(0,2) == \"o.\"\n\t\t\t&& doc[\"finished\"].getBool() == false\n\t\t\t&& doc[\"dir\"] == \"buy\"\n\t\t\t&& doc[\"status\"].getString() == \"active\"\n\t\t\t&& (doc[\"type\"].getString() == \"limit\"\n\t\t\t\t|| doc[\"type\"].getString() == \"postlimit\")) {\n\n\t\temit(doc[\"limitPrice\"], doc[\"size\"]);\n\t}\n\n}", "reduce": "/*\n * reduce.cpp\n *\n *  Created on: Jun 9, 2017\n *      Author: ondra\n */\n\n#include <couchcpp/api.h>\n\nValue reduce(RowSet rows) {\n\tjson::maxPrecisionDigits = 9;\n\n\tdouble amount = 0;\n\tunsigned int count = rows.size();;\n\tfor (auto &&x : rows) {\n\t\tamount = amount + x.value.getNumber();\n\t}\n\n\treturn Object(\"size\", amount)(\"offers\", count);\n}\n\nValue rereduce(Value rows) {\n\tdouble amount = 0;\n\tunsigned int count = 0;\n\tfor (auto x : rows) {\n\t\tamount = amount + x[\"size\"].getNumber();\n\t\tcount = count + x[\"offers\"].getUInt();\n\t}\n\treturn Object(\"size\", amount)(\"offers\", count);\n\n}"}}}
